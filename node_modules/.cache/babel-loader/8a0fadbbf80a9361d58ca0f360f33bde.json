{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nfunction fetchProfile(user) {\n  return fetch(`https://api.github.com/users/${user}`).then(res => res.json()).then(res => ({\n    name: res.name,\n    username: res.login,\n    avatar: res.avatar_url,\n    url: res.html_url,\n    bio: res.bio\n  }));\n}\n\nconst profileSchema = {\n  name: '',\n  username: '',\n  avatar: '',\n  url: '',\n  bio: ''\n};\nexport function useProfile(user) {\n  const [profile, setProfile] = useState(profileSchema);\n  useEffect(function () {\n    fetchProfile(user).then(function (profile) {\n      setProfile(profile);\n    });\n  }, [user]);\n  return profile;\n}","map":{"version":3,"sources":["/home/fabian/Documentos/Proyectos/PlazaPrimaveras/Frontend/src/hooks/boothHook.js"],"names":["useState","useEffect","fetchProfile","user","fetch","then","res","json","name","username","login","avatar","avatar_url","url","html_url","bio","profileSchema","useProfile","profile","setProfile"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAOC,KAAK,CAAE,gCAA+BD,IAAK,EAAtC,CAAL,CACJE,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECC,GAAG,KAAK;AACZE,IAAAA,IAAI,EAAEF,GAAG,CAACE,IADE;AAEZC,IAAAA,QAAQ,EAAEH,GAAG,CAACI,KAFF;AAGZC,IAAAA,MAAM,EAAEL,GAAG,CAACM,UAHA;AAIZC,IAAAA,GAAG,EAAEP,GAAG,CAACQ,QAJG;AAKZC,IAAAA,GAAG,EAAET,GAAG,CAACS;AALG,GAAL,CAFJ,CAAP;AASD;;AAED,MAAMC,aAAa,GAAG;AACpBR,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBE,EAAAA,MAAM,EAAE,EAHY;AAIpBE,EAAAA,GAAG,EAAE,EAJe;AAKpBE,EAAAA,GAAG,EAAE;AALe,CAAtB;AAQA,OAAO,SAASE,UAAT,CAAoBd,IAApB,EAA0B;AAC/B,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAACgB,aAAD,CAAtC;AAEAf,EAAAA,SAAS,CAAC,YAAW;AACnBC,IAAAA,YAAY,CAACC,IAAD,CAAZ,CACGE,IADH,CACQ,UAAUa,OAAV,EAAmB;AACvBC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAHH;AAID,GALQ,EAKN,CAACf,IAAD,CALM,CAAT;AAOA,SAAOe,OAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction fetchProfile(user) {\n  return fetch(`https://api.github.com/users/${user}`)\n    .then(res => res.json())\n    .then(res => ({\n      name: res.name,\n      username: res.login,\n      avatar: res.avatar_url,\n      url: res.html_url,\n      bio: res.bio\n    }))\n}\n\nconst profileSchema = {\n  name: '',\n  username: '',\n  avatar: '',\n  url: '',\n  bio: '',\n}\n\nexport function useProfile(user) {\n  const [profile, setProfile] = useState(profileSchema)\n\n  useEffect(function() {\n    fetchProfile(user)\n      .then(function (profile) {\n        setProfile(profile)\n      })\n  }, [user])\n\n  return profile;\n}"]},"metadata":{},"sourceType":"module"}